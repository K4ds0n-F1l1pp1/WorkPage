<?php
// File: module/Application/src/Application/Entity/Vehicle.php
namespace Application\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * @ORM\Entity
 * @ORM\Table(name="vehicles")
 */
class Vehicle
{
    /**
     * @ORM\Id
     * @ORM\GeneratedValue
     * @ORM\Column(type="integer")
     */
    private $id;

    /** @ORM\Column(type="string", length=7, nullable=false) */
    private $plate;

    /** @ORM\Column(type="string", length=30, nullable=true) */
    private $renavam;

    /** @ORM\Column(type="string", length=20, nullable=false) */
    private $model;

    /** @ORM\Column(type="string", length=20, nullable=false) */
    private $brand;

    /** @ORM\Column(type="integer", nullable=false) */
    private $year;

    /** @ORM\Column(type="string", length=20, nullable=false) */
    private $color;

    // Getters and setters...
}

// File: module/Application/src/Application/Entity/Driver.php
namespace Application\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * @ORM\Entity
 * @ORM\Table(name="drivers")
 */
class Driver
{
    /**
     * @ORM\Id
     * @ORM\GeneratedValue
     * @ORM\Column(type="integer")
     */
    private $id;

    /** @ORM\Column(type="string", length=200, nullable=false) */
    private $name;

    /** @ORM\Column(type="string", length=20, nullable=false) */
    private $rg;

    /** @ORM\Column(type="string", length=11, nullable=false) */
    private $cpf;

    /** @ORM\Column(type="string", length=20, nullable=true) */
    private $phone;

    /**
     * @ORM\ManyToOne(targetEntity="Application\Entity\Vehicle")
     * @ORM\JoinColumn(name="vehicle_id", referencedColumnName="id")
     */
    private $vehicle;

    // Getters and setters...
}

// File: module/Application/src/Application/Controller/VehicleController.php
namespace Application\Controller;

use Laminas\Mvc\Controller\AbstractActionController;
use Laminas\View\Model\ViewModel;
use Doctrine\ORM\EntityManager;

class VehicleController extends AbstractActionController
{
    private $entityManager;

    public function __construct(EntityManager $entityManager)
    {
        $this->entityManager = $entityManager;
    }

    public function reportAction()
    {
        $vehicles = $this->entityManager->getRepository('Application\\Entity\\Vehicle')->findAll();
        return new ViewModel(['vehicles' => $vehicles]);
    }
}

// File: module/Application/src/Application/Controller/DriverController.php
namespace Application\Controller;

use Laminas\Mvc\Controller\AbstractActionController;
use Laminas\View\Model\ViewModel;
use Doctrine\ORM\EntityManager;

class DriverController extends AbstractActionController
{
    private $entityManager;

    public function __construct(EntityManager $entityManager)
    {
        $this->entityManager = $entityManager;
    }

    public function reportAction()
    {
        $drivers = $this->entityManager->getRepository('Application\\Entity\\Driver')->findAll();
        return new ViewModel(['drivers' => $drivers]);
    }
}

// File: module/Application/config/module.config.php
return [
    'doctrine' => [
        'driver' => [
            'application_entities' => [
                'class' => Doctrine\ORM\Mapping\Driver\AnnotationDriver::class,
                'paths' => [__DIR__ . '/../src/Application/Entity']
            ],
            'orm_default' => [
                'drivers' => [
                    'Application\Entity' => 'application_entities',
                ],
            ],
        ],
    ],
    'router' => [
        'routes' => [
            'vehicle' => [
                'type' => 'segment',
                'options' => [
                    'route' => '/vehicle[/:action[/:id]]',
                    'defaults' => [
                        'controller' => Controller\VehicleController::class,
                        'action' => 'index',
                    ],
                ],
            ],
            'driver' => [
                'type' => 'segment',
                'options' => [
                    'route' => '/driver[/:action[/:id]]',
                    'defaults' => [
                        'controller' => Controller\DriverController::class,
                        'action' => 'index',
                    ],
                ],
            ],
        ],
    ],
];

// File: module/Application/view/application/vehicle/report.phtml
<h1>Vehicle Report</h1>
<table>
    <thead>
        <tr>
            <th>ID</th>
            <th>Plate</th>
            <th>Renavam</th>
            <th>Model</th>
            <th>Brand</th>
            <th>Year</th>
            <th>Color</th>
        </tr>
    </thead>
    <tbody>
        <?php foreach ($vehicles as $vehicle): ?>
            <tr>
                <td><?= $vehicle->getId() ?></td>
                <td><?= $vehicle->getPlate() ?></td>
                <td><?= $vehicle->getRenavam() ?></td>
                <td><?= $vehicle->getModel() ?></td>
                <td><?= $vehicle->getBrand() ?></td>
                <td><?= $vehicle->getYear() ?></td>
                <td><?= $vehicle->getColor() ?></td>
            </tr>
        <?php endforeach; ?>
    </tbody>
</table>

// File: module/Application/view/application/driver/report.phtml
<h1>Driver Report</h1>
<table>
    <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>RG</th>
            <th>CPF</th>
            <th>Phone</th>
            <th>Vehicle</th>
        </tr>
    </thead>
    <tbody>
        <?php foreach ($drivers as $driver): ?>
            <tr>
                <td><?= $driver->getId() ?></td>
                <td><?= $driver->getName() ?></td>
                <td><?= $driver->getRg() ?></td>
                <td><?= $driver->getCpf() ?></td>
                <td><?= $driver->getPhone() ?></td>
                <td><?= $driver->getVehicle() ? $driver->getVehicle()->getPlate() : 'N/A' ?></td>
            </tr>
        <?php endforeach; ?>
    </tbody>
</table>



///////////////////////////////////////////////////////////////////////////////////////////////////////////////

Utilizando SQLite:

// Estrutura inicial do projeto para SQLite, PHP, HTML e CSS com estilo pop-art.

// Arquivo: init.php
<?php
$db = new PDO('sqlite:db/database.sqlite');
$db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

// Criação das tabelas, caso não existam
$db->exec("CREATE TABLE IF NOT EXISTS vehicles (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    plate TEXT NOT NULL,
    renavam TEXT,
    model TEXT NOT NULL,
    brand TEXT NOT NULL,
    year INTEGER NOT NULL,
    color TEXT NOT NULL
);");

$db->exec("CREATE TABLE IF NOT EXISTS drivers (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    rg TEXT NOT NULL,
    cpf TEXT NOT NULL,
    phone TEXT,
    vehicle_id INTEGER,
    FOREIGN KEY(vehicle_id) REFERENCES vehicles(id)
);");
?>

// Arquivo: index.php
<?php include 'init.php'; ?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="css/styles.css">
    <title>Vehicle & Driver Management</title>
</head>
<body>
    <header class="header">
        <h1>Vehicle & Driver Management</h1>
        <nav>
            <a href="vehicle.php">Manage Vehicles</a>
            <a href="driver.php">Manage Drivers</a>
            <a href="report.php">Reports</a>
        </nav>
    </header>
    <main class="main">
        <h2>Welcome</h2>
        <p>Use the navigation above to manage vehicles and drivers or view reports.</p>
    </main>
    <footer class="footer">
        <p>&copy; 2025 Vehicle Management System</p>
    </footer>
</body>
</html>

// Arquivo: vehicle.php
<?php include 'init.php'; ?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="css/styles.css">
    <title>Manage Vehicles</title>
</head>
<body>
    <header class="header">
        <h1>Manage Vehicles</h1>
        <nav>
            <a href="index.php">Home</a>
            <a href="driver.php">Manage Drivers</a>
            <a href="report.php">Reports</a>
        </nav>
    </header>
    <main class="main">
        <h2>Vehicles</h2>
        <form action="vehicle.php" method="post">
            <label for="plate">Plate:</label>
            <input type="text" id="plate" name="plate" maxlength="7" required>

            <label for="renavam">Renavam:</label>
            <input type="text" id="renavam" name="renavam" maxlength="30">

            <label for="model">Model:</label>
            <input type="text" id="model" name="model" maxlength="20" required>

            <label for="brand">Brand:</label>
            <input type="text" id="brand" name="brand" maxlength="20" required>

            <label for="year">Year:</label>
            <input type="number" id="year" name="year" required>

            <label for="color">Color:</label>
            <input type="text" id="color" name="color" maxlength="20" required>

            <button type="submit">Add Vehicle</button>
        </form>
        <h3>Existing Vehicles</h3>
        <table>
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Plate</th>
                    <th>Model</th>
                    <th>Brand</th>
                    <th>Year</th>
                    <th>Color</th>
                </tr>
            </thead>
            <tbody>
                <?php
                if ($_SERVER['REQUEST_METHOD'] === 'POST') {
                    $stmt = $db->prepare("INSERT INTO vehicles (plate, renavam, model, brand, year, color) VALUES (?, ?, ?, ?, ?, ?)");
                    $stmt->execute([
                        $_POST['plate'],
                        $_POST['renavam'],
                        $_POST['model'],
                        $_POST['brand'],
                        $_POST['year'],
                        $_POST['color']
                    ]);
                }

                $vehicles = $db->query('SELECT * FROM vehicles')->fetchAll(PDO::FETCH_ASSOC);
                foreach ($vehicles as $vehicle) {
                    echo "<tr>
                            <td>{$vehicle['id']}</td>
                            <td>{$vehicle['plate']}</td>
                            <td>{$vehicle['model']}</td>
                            <td>{$vehicle['brand']}</td>
                            <td>{$vehicle['year']}</td>
                            <td>{$vehicle['color']}</td>
                          </tr>";
                }
                ?>
            </tbody>
        </table>
    </main>
    <footer class="footer">
        <p>&copy; 2025 Vehicle Management System</p>
    </footer>
</body>
</html>

// Arquivo: css/styles.css
body {
    font-family: 'Arial', sans-serif;
    margin: 0;
    padding: 0;
    background: #f0f0f0;
}

.header {
    background: #ff4081;
    color: white;
    padding: 1rem;
    text-align: center;
}

.header nav a {
    color: white;
    margin: 0 1rem;
    text-decoration: none;
    font-weight: bold;
}

.main {
    padding: 2rem;
}

.footer {
    background: #303030;
    color: white;
    text-align: center;
    padding: 1rem;
    position: fixed;
    bottom: 0;
    width: 100%;
}

table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 1rem;
}

table, th, td {
    border: 1px solid #ccc;
}

th, td {
    padding: 0.5rem;
    text-align: left;
}

form {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
    max-width: 600px;
    margin: auto;
}

form label {
    font-weight: bold;
}

form input, form button {
    padding: 0.5rem;
    font-size: 1rem;
}

form button {
    grid-column: span 2;
    background: #ff4081;
    color: white;
    border: none;
    cursor: pointer;
    font-weight: bold;
}


//////////////////////////////////////////////////////////////////////////////////////////


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Excluir Registro</title>
</head>
<body>
    <h1>Excluir Registro</h1>
    <form method="POST" action="">
        <label for="id">Digite o ID que deseja excluir:</label>
        <input type="number" name="id" id="id" required>
        <button type="submit">Excluir</button>
    </form>

    <?php
    // Código PHP para tratar o formulário
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        // Captura o ID do formulário
        $id = $_POST['id'];

        // Conexão com o banco SQLite
        try {
            $pdo = new PDO('sqlite:meu_banco.db');

            // Verifica se o ID existe antes de excluir
            $queryCheck = $pdo->prepare('SELECT * FROM usuarios WHERE id = :id');
            $queryCheck->bindValue(':id', $id, PDO::PARAM_INT);
            $queryCheck->execute();

            if ($queryCheck->rowCount() > 0) {
                // Exclui o registro
                $queryDelete = $pdo->prepare('DELETE FROM usuarios WHERE id = :id');
                $queryDelete->bindValue(':id', $id, PDO::PARAM_INT);
                $queryDelete->execute();

                echo "<p style='color: green;'>Registro com ID $id foi excluído com sucesso!</p>";
            } else {
                echo "<p style='color: red;'>Registro com ID $id não encontrado.</p>";
            }
        } catch (PDOException $e) {
            echo "<p style='color: red;'>Erro ao acessar o banco de dados: " . $e->getMessage() . "</p>";
        }
    }
    ?>
</body>
</html>

///////////////////////////////////////////////////////////////////////////////////////

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $id = $_POST['id'];

    try {
        // Conexão com o banco de dados
        $pdo = new PDO('sqlite:' . __DIR__ . '/database.sqlite');
        $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        // Verifica se o registro existe
        $queryCheck = $pdo->prepare('SELECT * FROM drivers WHERE id = :id');
        $queryCheck->bindValue(':id', $id, PDO::PARAM_INT);
        $queryCheck->execute();

        if ($queryCheck->fetch()) {
            // Exclui o registro
            $queryDelete = $pdo->prepare('DELETE FROM drivers WHERE id = :id');
            $queryDelete->bindValue(':id', $id, PDO::PARAM_INT);
            $queryDelete->execute();

            // Zera o autoincremento se não houver mais registros
            $countRows = $pdo->query('SELECT COUNT(*) FROM drivers')->fetchColumn();
            if ($countRows == 0) {
                $pdo->exec("DELETE FROM sqlite_sequence WHERE name = 'drivers'");
            }

            echo "<p style='color: green;'>Registro com ID $id foi excluído com sucesso e o contador reiniciado.</p>";
        } else {
            echo "<p style='color: red;'>Registro com ID $id não encontrado.</p>";
        }
    } catch (PDOException $e) {
        echo "<p style='color: red;'>Erro ao acessar o banco de dados: " . $e->getMessage() . "</p>";
    }
}

//////////////////////////////////////////////////////////////////////////////////////////////////

<?php
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $id = $_POST['id'];

    try {
        $pdo = new PDO('sqlite:' . __DIR__ . '/db/database.sqlite');
        $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        $queryCheck = $pdo->prepare('SELECT * FROM drivers WHERE id = :id');
        $queryCheck->bindValue(':id', $id, PDO::PARAM_INT);
        $queryCheck->execute();

        if ($queryCheck->fetch()) {

            $queryDelete = $pdo->prepare('DELETE FROM drivers WHERE id = :id');
            $queryDelete->bindValue(':id', $id, PDO::PARAM_INT);
            $queryDelete->execute();
            echo "<p style='color: green;'>Registro com ID $id foi excluído com sucesso.</p>";

            header('Location: drivers.php');
            exit();
        } else {
            echo "<p style='color: red;'>Registro com ID $id não encontrado.</p>";
        }
    } catch (PDOException $e) {
        echo "<p style='color: red;'>Erro ao acessar o banco de dados: " . $e->getMessage() . "</p>";
    }
}

///////////////////////////////////////////////////////////////////////////////

<?php
$db = new PDO('sqlite:db/database.sqlite');
$db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

$type = $_GET['type'] ?? null; // Tipo: driver ou vehicle
$id = $_GET['id'] ?? null;

if (!$type || !$id) {
    die('Parâmetros inválidos!');
}

$data = null;

if ($type === 'driver') {
    $stmt = $db->prepare("SELECT * FROM drivers WHERE id = ?");
    $stmt->execute([$id]);
    $data = $stmt->fetch(PDO::FETCH_ASSOC);
} elseif ($type === 'vehicle') {
    $stmt = $db->prepare("SELECT * FROM veiculos WHERE id = ?");
    $stmt->execute([$id]);
    $data = $stmt->fetch(PDO::FETCH_ASSOC);
}

if (!$data) {
    die('Registro não encontrado!');
}

// Atualizando os dados ao enviar o formulário
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if ($type === 'driver') {
        $stmt = $db->prepare("
            UPDATE drivers 
            SET name = ?, rg = ?, cpf = ?, phone = ?, vehicle_id = ? 
            WHERE id = ?
        ");
        $stmt->execute([
            $_POST['name'],
            $_POST['rg'],
            $_POST['cpf'],
            $_POST['phone'],
            $_POST['vehicle_id'] ?: null,
            $id
        ]);
    } elseif ($type === 'vehicle') {
        $stmt = $db->prepare("
            UPDATE veiculos 
            SET placa = ?, renavam = ?, modelo = ?, marca = ?, ano = ?, cor = ? 
            WHERE id = ?
        ");
        $stmt->execute([
            $_POST['placa'],
            $_POST['renavam'],
            $_POST['modelo'],
            $_POST['marca'],
            $_POST['ano'],
            $_POST['cor'],
            $id
        ]);
    }
    header("Location: index.php");
    exit;
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Editar <?= htmlspecialchars($type) ?></title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <header>
        <h1>Editar <?= htmlspecialchars($type === 'driver' ? 'Motorista' : 'Caminhão') ?></h1>
    </header>
    <main>
        <form method="POST" class="edit-form">
            <?php if ($type === 'driver'): ?>
                <label for="name">Nome:</label>
                <input type="text" name="name" id="name" value="<?= htmlspecialchars($data['name']) ?>" required>

                <label for="rg">RG:</label>
                <input type="text" name="rg" id="rg" value="<?= htmlspecialchars($data['rg']) ?>" required>

                <label for="cpf">CPF:</label>
                <input type="text" name="cpf" id="cpf" value="<?= htmlspecialchars($data['cpf']) ?>" required>

                <label for="phone">Telefone:</label>
                <input type="text" name="phone" id="phone" value="<?= htmlspecialchars($data['phone']) ?>">

                <label for="vehicle_id">Caminhão:</label>
                <select name="vehicle_id" id="vehicle_id">
                    <option value="">Nenhum</option>
                    <?php
                    $vehicles = $db->query("SELECT * FROM veiculos")->fetchAll(PDO::FETCH_ASSOC);
                    foreach ($vehicles as $vehicle): ?>
                        <option value="<?= $vehicle['id'] ?>" <?= $data['vehicle_id'] == $vehicle['id'] ? 'selected' : '' ?>>
                            <?= $vehicle['modelo'] ?> (<?= $vehicle['placa'] ?>)
                        </option>
                    <?php endforeach; ?>
                </select>
            <?php elseif ($type === 'vehicle'): ?>
                <label for="placa">Placa:</label>
                <input type="text" name="placa" id="placa" value="<?= htmlspecialchars($data['placa']) ?>" required>

                <label for="renavam">Renavam:</label>
                <input type="text" name="renavam" id="renavam" value="<?= htmlspecialchars($data['renavam']) ?>">

                <label for="modelo">Modelo:</label>
                <input type="text" name="modelo" id="modelo" value="<?= htmlspecialchars($data['modelo']) ?>" required>

                <label for="marca">Marca:</label>
                <input type="text" name="marca" id="marca" value="<?= htmlspecialchars($data['marca']) ?>" required>

                <label for="ano">Ano:</label>
                <input type="number" name="ano" id="ano" value="<?= htmlspecialchars($data['ano']) ?>" required>

                <label for="cor">Cor:</label>
                <input type="text" name="cor" id="cor" value="<?= htmlspecialchars($data['cor']) ?>" required>
            <?php endif; ?>

            <button type="submit">Salvar</button>
        </form>
    </main>
    <footer>
        <p>&copy; <?= date('Y') ?> Gerenciamento de Caminhões</p>
    </footer>
</body>
</html>

<tr>
    <td><?= htmlspecialchars($relation['driver_name']) ?: 'Não atribuído' ?></td>
    <td><?= htmlspecialchars($relation['vehicle_model']) ?: 'Nenhum caminhão' ?></td>
    <td><?= htmlspecialchars($relation['vehicle_plate']) ?: 'N/A' ?></td>
    <td>
        <a href="edit.php?type=driver&id=<?= $relation['driver_id'] ?>">Editar Motorista</a> |
        <a href="edit.php?type=vehicle&id=<?= $relation['vehicle_id'] ?>">Editar Caminhão</a>
    </td>
</tr>

///////////////////////////////////////////////////////////////////////////////////////////////////

<?php
$db = new PDO('sqlite:db/database.sqlite');
$db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $username = $_POST['username'];
    $password = password_hash($_POST['password'], PASSWORD_BCRYPT); // Hashear a senha

    $stmt = $db->prepare("INSERT INTO users (username, password) VALUES (?, ?)");
    $stmt->execute([$username, $password]);

    echo "Usuário cadastrado com sucesso!";
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registrar Usuário</title>
</head>
<body>
    <h1>Registrar Usuário</h1>
    <form method="POST">
        <label for="username">Usuário:</label>
        <input type="text" name="username" id="username" required>
        <br>
        <label for="password">Senha:</label>
        <input type="password" name="password" id="password" required>
        <br>
        <button type="submit">Registrar</button>
    </form>
</body>
</html>
3. Tela de Login
Arquivo: login.php
php
Copiar código
<?php
session_start();

$db = new PDO('sqlite:db/database.sqlite');
$db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $username = $_POST['username'];
    $password = $_POST['password'];

    $stmt = $db->prepare("SELECT * FROM users WHERE username = ?");
    $stmt->execute([$username]);
    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($user && password_verify($password, $user['password'])) {
        $_SESSION['user_id'] = $user['id'];
        $_SESSION['username'] = $user['username'];
        header("Location: index.php");
        exit;
    } else {
        $error = "Usuário ou senha incorretos.";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
</head>
<body>
    <h1>Login</h1>
    <?php if (isset($error)): ?>
        <p style="color: red;"><?= $error ?></p>
    <?php endif; ?>
    <form method="POST">
        <label for="username">Usuário:</label>
        <input type="text" name="username" id="username" required>
        <br>
        <label for="password">Senha:</label>
        <input type="password" name="password" id="password" required>
        <br>
        <button type="submit">Entrar</button>
    </form>
</body>
</html>
4. Verificação de Autenticação
Adicione um arquivo para verificar se o usuário está logado.

Arquivo: auth.php
php
Copiar código
<?php
session_start();

if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit;
}
?>

/////////////////////////////////////////////////////////////////////

5. Integrando Login com o Sistema
Inclua o arquivo auth.php no topo das páginas que exigem autenticação.

Exemplo no index.php:

php
Copiar código
<?php
require 'auth.php';
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gerenciamento de Caminhões</title>
</head>
<body>
    <header>
        <h1>Bem-vindo, <?= htmlspecialchars($_SESSION['username']) ?>!</h1>
        <a href="logout.php">Sair</a>
    </header>
    <!-- Conteúdo da página -->
</body>
</html>
6. Logout
Adicione uma página para encerrar a sessão do usuário.

///////////////////////////////////////////////////////////////

Arquivo: logout.php
php
Copiar código
<?php
session_start();
session_destroy();
header("Location: login.php");
exit;
?>

<!-- <a href="editar_motoristas.php?id=<?= // $driver['id'] ?>">Editar</a> -->

<?php
$db = new PDO('sqlite:db/database.sqlite');
$db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

if (isset($_GET['id'])) {
    $id = $_GET['id'];

    // Buscar os dados do motorista
    $stmt = $db->prepare("SELECT * FROM drivers WHERE id = ?");
    $stmt->execute([$id]);
    $driver = $stmt->fetch(PDO::FETCH_ASSOC);

    if (!$driver) {
        echo "Motorista não encontrado.";
        exit;
    }
}

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $id = $_POST['id'];
    $name = $_POST['name'];
    $rg = $_POST['rg'];
    $cpf = $_POST['cpf'];
    $phone = $_POST['phone'];
    $vehicle_id = $_POST['vehicle_id'];

    // Atualizar no banco de dados
    $stmt = $db->prepare("UPDATE drivers SET name = ?, rg = ?, cpf = ?, phone = ?, vehicle_id = ? WHERE id = ?");
    $stmt->execute([$name, $rg, $cpf, $phone, $vehicle_id, $id]);

    header("Location: drivers_list.php");
    exit;
}

// Buscar todos os veículos para exibição no dropdown
$vehicles = $db->query("SELECT * FROM veiculos")->fetchAll(PDO::FETCH_ASSOC);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Editar Motorista</title>
</head>
<body>
    <h1>Editar Motorista</h1>
    <form method="POST">
        <input type="hidden" name="id" value="<?= htmlspecialchars($driver['id']) ?>">
        
        <label for="name">Nome:</label>
        <input type="text" name="name" id="name" value="<?= htmlspecialchars($driver['name']) ?>" required>
        <br>
        
        <label for="rg">RG:</label>
        <input type="text" name="rg" id="rg" value="<?= htmlspecialchars($driver['rg']) ?>" required>
        <br>
        
        <label for="cpf">CPF:</label>
        <input type="text" name="cpf" id="cpf" value="<?= htmlspecialchars($driver['cpf']) ?>" required>
        <br>
        
        <label for="phone">Telefone:</label>
        <input type="text" name="phone" id="phone" value="<?= htmlspecialchars($driver['phone']) ?>">
        <br>
        
        <label for="vehicle_id">Caminhão:</label>
        <select name="vehicle_id" id="vehicle_id">
            <option value="">Nenhum</option>
            <?php foreach ($vehicles as $vehicle): ?>
                <option value="<?= $vehicle['id'] ?>" <?= $driver['vehicle_id'] == $vehicle['id'] ? 'selected' : '' ?>>
                    <?= htmlspecialchars($vehicle['placa']) ?> (<?= htmlspecialchars($vehicle['modelo']) ?>)
                </option>
            <?php endforeach; ?>
        </select>
        <br>
        
        <button type="submit">Salvar</button>
    </form>
</body>
</html>

/////////////////////////////////////////////////////////////////////////////////////////////////

<form id="form1" name="form1" method="post" action="<?php echo $PHP_SELF; ?>">
        Lista de Motorista:
        <select id="id" id="id">
        <option value="">--- Select ---</option> 
        <?  
                $db = new PDO(dsn: 'sqlite:db/database.sqlite');
                $select="drivers";  
                if (isset ($select)&&$select!=""){
                $select=$_POST ['NEW'];  
                $stmt = $db->prepare("SELECT * FROM drivers WHERE id = ?");  
            while($row_list= $driver = $stmt->fetch(PDO::FETCH_ASSOC));
                ?>  
                    <option value="<? echo $row_list['emp_id']; ?>"<? if($row_list['emp_id']==$select){ echo "selected"; } ?>>  
                                         <?echo $row_list['emp_id'];?>  
                    </option>  
                <?
                }
                ?>  
            </select>  
            <input type="submit" name="Submit" value="Select" />  
        </form>    
        </select>
    </form>

<a href="editar.php?id=<?= $veiculo['id'] ?>">Editar</a>

/////////////////////////////////////////////////////////////////////////////////////////////////////

<?php

$db = new PDO('sqlite:db/database.sqlite');
$db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

if (isset($_GET['id'])) {
    $id = $_GET['id'];

    $stmt = $db->prepare("SELECT * FROM drivers WHERE id = ?");
    $stmt->execute([$id]);
    $drivers = $stmt->fetch(PDO::FETCH_ASSOC);

    if (!$drivers) {
        echo "Motorista com ID $id não encontrado.";
        exit;
    }
}

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $id = $_POST['id'];
    $nome = $_POST['nome'];
    $rg = $_POST['rg'];
    $cpf = $_POST['cpf'];
    $telefone = $_POST['telefone'];
    $veiculo_id = $_POST['veiculo_id'];

    $stmt = $db->prepare(query: "UPDATE drivers SET nome = ?, rg = ?, cpf = ?, telefone = ?, veiculo_id = ? WHERE id = ?");
    $stmt->execute([$nome, $rg, $cpf, $telefone, $veiculo_id, $id]);

    header("Location: drivers.php");
    exit;
}

$veiculos = $db->query("SELECT * FROM veiculos")->fetchAll(PDO::FETCH_ASSOC);
?>

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/style_editar.css">
    <title>Editar Motorista</title>
</head>
<body>
<header>
        <nav class="navegacao">
            <ul>
                <li>
                    <button onclick="location.href='/index.php'" type="button">
                    Home</button>
                </li>
                <li>
                    <button onclick="location.href='drivers.php'" type="button">
                    Gerenciar Motoristas</button>
                </li>
                <li>
                    <button onclick="location.href='reports.php'" type="button">
                    Reports</button>
                </li>
            </ul>
        </nav>
    </header>
    <h1>Editar Motorista</h1>
    <form method="POST">
        <input type="hidden" name="id" value="<?= htmlspecialchars($drivers['id']) ?>">
        
        <label for="nome">Nome:</label>
        <input type="text" name="nome" id="nome" value="<?= htmlspecialchars($drivers['no    me']) ?>" required>
        <br>
        
        <label for="rg">RG:</label>
        <input type="text" name="rg" id="rg" value="<?= htmlspecialchars($drivers['rg']) ?>" required>
        <br>
        
        <label for="cpf">CPF:</label>
        <input type="text" name="cpf" id="cpf" value="<?= htmlspecialchars($drivers['cpf']) ?>" required>
        <br>
        
        <label for="telefone">Telefone:</label>
        <input type="text" name="telefone" id="telefone" value="<?= htmlspecialchars($drivers['telefone']) ?>">
        <br>
        
        <label for="veiculo_id">ID do Caminhão:</label>
        <input type="number" name="veiculo_id" id="veiculo_id" value="<?= htmlspecialchars($drivers['veiculo_id']) ?>">
        <br>
        
        <button type="submit">Salvar</button>
    </form>
    <br>
    <br>
    <br>
    <br>
    <br>
    <footer class="footer">
        <p>&copy; Gerenciador de Riscos e Rotas - 2025</p>
    </footer>
</body>
</html>

////////////////////////////////////////////////////////////////////////////////////////

<?php
// Configuração inicial
$db = new PDO('sqlite:db/database.sqlite');
$db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

// Buscar motoristas e veículos
$drivers = $db->query("SELECT * FROM drivers")->fetchAll(PDO::FETCH_ASSOC);
$vehicles = $db->query("SELECT * FROM veiculos")->fetchAll(PDO::FETCH_ASSOC);

// Verificar envio do formulário
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $driver_id = $_POST['driver_id'];
    $vehicle_id = $_POST['vehicle_id'];

    // Atualizar o motorista com o veículo selecionado
    $stmt = $db->prepare("UPDATE drivers SET vehicle_id = ? WHERE id = ?");
    $stmt->execute([$vehicle_id, $driver_id]);

    echo "Motorista atualizado com sucesso!";
    header("Refresh: 2; URL=link_driver_vehicle.php");
    exit;
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ligar Motoristas aos Veículos</title>
</head>
<body>
    <h1>Associar Motorista a Veículo</h1>

    <form method="POST">
        <label for="driver_id">Selecione o Motorista:</label>
        <select name="driver_id" id="driver_id" required>
            <option value="">Escolha um motorista</option>
            <?php foreach ($drivers as $driver): ?>
                <option value="<?= $driver['id'] ?>">
                    <?= $driver['name'] ?> (ID: <?= $driver['id'] ?>)
                </option>
            <?php endforeach; ?>
        </select>
        <br><br>

        <label for="vehicle_id">Selecione o Veículo:</label>
        <select name="vehicle_id" id="vehicle_id" required>
            <option value="">Escolha um veículo</option>
            <?php foreach ($vehicles as $vehicle): ?>
                <option value="<?= $vehicle['id'] ?>">
                    <?= $vehicle['modelo'] ?> - <?= $vehicle['placa'] ?> (ID: <?= $vehicle['id'] ?>)
                </option>
            <?php endforeach; ?>
        </select>
        <br><br>

        <button type="submit">Salvar Associação</button>
    </form>
</body>
</html>

////////////////////////////////////////////////////////////////////////////////////////////

<?php
// Configuração inicial
$db = new PDO('sqlite:db/database.sqlite');
$db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

// Buscar motoristas e seus veículos
$query = "
    SELECT 
        drivers.id AS driver_id, 
        drivers.name AS driver_name, 
        drivers.rg AS driver_rg, 
        drivers.cpf AS driver_cpf, 
        drivers.phone AS driver_phone, 
        veiculos.modelo AS vehicle_model, 
        veiculos.placa AS vehicle_plate 
    FROM 
        drivers
    LEFT JOIN 
        veiculos 
    ON 
        drivers.vehicle_id = veiculos.id
";
$results = $db->query($query)->fetchAll(PDO::FETCH_ASSOC);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Motoristas e Veículos</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            padding: 20px;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        table, th, td {
            border: 1px solid black;
        }
        th, td {
            padding: 10px;
            text-align: left;
        }
        th {
            background-color: #f4f4f4;
        }
    </style>
</head>
<body>
    <h1>Lista de Motoristas e Veículos</h1>

    <table>
        <thead>
            <tr>
                <th>ID Motorista</th>
                <th>Nome</th>
                <th>RG</th>
                <th>CPF</th>
                <th>Telefone</th>
                <th>Veículo</th>
                <th>Placa</th>
            </tr>
        </thead>
        <tbody>
            <?php if (count($results) > 0): ?>
                <?php foreach ($results as $row): ?>
                    <tr>
                        <td><?= htmlspecialchars($row['driver_id']) ?></td>
                        <td><?= htmlspecialchars($row['driver_name']) ?></td>
                        <td><?= htmlspecialchars($row['driver_rg']) ?></td>
                        <td><?= htmlspecialchars($row['driver_cpf']) ?></td>
                        <td><?= htmlspecialchars($row['driver_phone'] ?: 'N/A') ?></td>
                        <td><?= htmlspecialchars($row['vehicle_model'] ?: 'Sem Veículo') ?></td>
                        <td><?= htmlspecialchars($row['vehicle_plate'] ?: 'N/A') ?></td>
                    </tr>
                <?php endforeach; ?>
            <?php else: ?>
                <tr>
                    <td colspan="7">Nenhum motorista cadastrado.</td>
                </tr>
            <?php endif; ?>
        </tbody>
    </table>
</body>
</html>

////////////////////////////////////////////////////////////////////////////////////////////

<!-- Botão para acionar modal -->
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#modalExemplo">
  Abrir modal de demonstração
</button>

<!-- Modal -->
<div class="modal fade" id="modalExemplo" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Título do modal</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Fechar">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        ...
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Fechar</button>
        <button type="button" class="btn btn-primary">Salvar mudanças</button>
      </div>
    </div>
  </div>
</div>

////////////////////////////////////////////////////////////////////////////////////////////

<div class="d-flex">
            <div class="row col-3 m-3 p-2">
                <div class="card">
                    <h5 class="card-header">Evento</h5>
                    <div class="card-body">
                        <h5 class="card-title">Data:</h5>
                        <p class="card-text">Motivo:</p>
                        <a action="excluirEvento.php" class="btn btn-primary">Concluir</a>
                    </div>
                </div>
            </div>
            <div class="row col-3 m-3 p-2">
                <div class="card">
                    <h5 class="card-header">Evento</h5>
                    <div class="card-body">
                        <h5 class="card-title">Data:</h5>
                        <p class="card-text">Motivo:</p>
                        <a action="excluirEvento.php" class="btn btn-primary">Concluir</a>
                    </div>
                </div>
            </div>
            <div class="row col-3 m-3 p-2">
                <div class="card">
                    <h5 class="card-header">Evento</h5>
                    <div class="card-body">
                        <h5 class="card-title">Data:</h5>
                        <p class="card-text">Motivo:</p>
                        <a action="excluirEvento.php" class="btn btn-primary">Concluir</a>
                    </div>
                </div>
            </div>
        </div>